-- @nsURI Java=http://www.eclipse.org/MoDisco/Java/0.2.incubation/java
-- @path Data=/tp.fil/src/tp/fil/resources/Data.ecore

module DataComputation;
create OUT : Data from IN : Java;

rule Model2Model {
	from 
		s: Java!Package (
			-- Sélection du package ayant parent 'petstore' et nom 'model'
			if s.package.oclIsUndefined()
				then false 
				else s.name = 'model' and s.package.name = 'petstore' 
			endif 
		)
	to 
		t:
			Data!Model (
				classes <- s.ownedElements
								->select(elem | elem.oclIsTypeOf(Java!ClassDeclaration))
								->collect(elem | thisModule.ClassDeclaration2Classes(elem))
			)
}

lazy rule ClassDeclaration2Classes {
	from
		s: Java!ClassDeclaration
		(if s.package.oclIsUndefined()
			then false 
			else s.package.name = 'model'
		endif)
	to
		t: Data!Classe (
			name <- s.name,
			attributs <- s.bodyDeclarations
								->select(att | att.oclIsTypeOf(Java!FieldDeclaration))
								->collect(att | thisModule.FieldDeclaration2Attribut(att))
		)
}

lazy rule FieldDeclaration2Attribut {
 	from 
 		f: Java!FieldDeclaration
		(not f.type.oclIsUndefined())
	to 
		t: Data!Attribut (
			name <- f.fragments.first().name,
			type <- f.type.type.name
		)		
}

